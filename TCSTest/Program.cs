using Microsoft.OpenApi.Models;
using TCSTest.Repositories.FileBased;
using TCSTest.Repositories.Interfaces;
using TCSTest.Services.FileBased;
using TCSTest.Services.Interfaces;
using TCSTest.Swagger;

var builder = WebApplication.CreateBuilder(args);

// Add services
builder.Services.AddControllers();

// Repositories
builder.Services.AddScoped<IChannelRepository, ChannelRepository>();
builder.Services.AddScoped<IContentRepository, ContentRepository>();
builder.Services.AddScoped<IScheduleRepository, ScheduleRepository>();

// Services
builder.Services.AddScoped<IChannelService, ChannelService>();
builder.Services.AddScoped<IContentService, ContentService>();
builder.Services.AddScoped<IScheduleService, ScheduleService>();

// Swagger configuration
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen(options =>
{
    options.SwaggerDoc("v1", new OpenApiInfo
    {
        Title = "TCTTest API",
        Version = "v1"
    });

    options.SchemaFilter<HideAutoGeneratedIdSchemaFilter>();
    options.OperationFilter<HideScheduleIdInPutOperationFilter>();
});

var app = builder.Build();

if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();
app.UseAuthorization();
app.MapControllers();

app.Run();
